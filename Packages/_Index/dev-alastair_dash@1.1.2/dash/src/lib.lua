return {
    Error = require(script.Parent.Error),
    None = require(script.Parent.None),
    Symbol = require(script.Parent.Symbol),
    Types = require(script.Parent.Types),
    all = require(script.Parent.all),
    append = require(script.Parent.append),
    assertEqual = require(script.Parent.assertEqual),
    assign = require(script.Parent.assign),
    chain = require(script.Parent.chain),
    class = require(script.Parent.class),
    collect = require(script.Parent.collect),
    collectArray = require(script.Parent.collectArray),
    collectSet = require(script.Parent.collectSet),
    compose = require(script.Parent.compose),
    copy = require(script.Parent.copy),
    count = require(script.Parent.count),
    cycles = require(script.Parent.cycles),
    endsWith = require(script.Parent.endsWith),
    filter = require(script.Parent.filter),
    find = require(script.Parent.find),
    findIndex = require(script.Parent.findIndex),
    flat = require(script.Parent.flat),
    forEach = require(script.Parent.forEach),
    forEachArgs = require(script.Parent.forEachArgs),
    format = require(script.Parent.format),
    formatValue = require(script.Parent.formatValue),
    freeze = require(script.Parent.freeze),
    frequencies = require(script.Parent.frequencies),
    getOrSet = require(script.Parent.getOrSet),
    groupBy = require(script.Parent.groupBy),
    identity = require(script.Parent.identity),
    includes = require(script.Parent.includes),
    isCallable = require(script.Parent.isCallable),
    isLowercase = require(script.Parent.isLowercase),
    isUppercase = require(script.Parent.isUppercase),
    iterable = require(script.Parent.iterable),
    iterator = require(script.Parent.iterator),
    join = require(script.Parent.join),
    joinDeep = require(script.Parent.joinDeep),
    keyBy = require(script.Parent.keyBy),
    keys = require(script.Parent.keys),
    last = require(script.Parent.last),
    leftPad = require(script.Parent.leftPad),
    map = require(script.Parent.map),
    mapFirst = require(script.Parent.mapFirst),
    mapLast = require(script.Parent.mapLast),
    mapOne = require(script.Parent.mapOne),
    max = require(script.Parent.max),
    min = require(script.Parent.min),
    noop = require(script.Parent.noop),
    omit = require(script.Parent.omit),
    pick = require(script.Parent.pick),
    pretty = require(script.Parent.pretty),
    product = require(script.Parent.product),
    reduce = require(script.Parent.reduce),
    reverse = require(script.Parent.reverse),
    rightPad = require(script.Parent.rightPad),
    shallowEqual = require(script.Parent.shallowEqual),
    slice = require(script.Parent.slice),
    some = require(script.Parent.some),
    splitOn = require(script.Parent.splitOn),
    startsWith = require(script.Parent.startsWith),
    sum = require(script.Parent.sum),
    trim = require(script.Parent.trim),
    values = require(script.Parent.values),
    zip = require(script.Parent.zip),
}